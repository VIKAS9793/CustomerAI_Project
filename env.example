# For local development, add credentials to your own untracked files. Do not commit secret-like patterns.
# Application environment
ENVIRONMENT=development  # development, testing, production, docker

# Server settings
HOST=0.0.0.0
PORT=8000
WORKERS=4

# Database configuration
DATABASE_URI=sqlite:///customerai_dev.db
# For production:
# DATABASE_URI=postgresql://usernBASIC_AUTH=admin:password123 # pragma: allowlist secret@localhost:5432/customerai

# API keys


# Security


JWT_SECRET_KEY=your_jwt_secret_key_here  # Generate with: openssl rand -hex 32
ENCRYPTION_KEY=your_encryption_key_here  # Generate with: openssl rand -hex 32
CORS_ORIGINS=http://localhost:3000,http://localhost:8501

# Logging
LOG_LEVEL=DEBUG  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=standard  # standard, json

# Feature flags
ENABLE_HUMAN_REVIEW=true
ENABLE_BIAS_DETECTION=true
ENABLE_PRIVACY_FEATURES=true

# Performance
CACHE_TIMEOUT=300  # seconds
REQUEST_TIMEOUT=30  # seconds

# AI settings
AI_MAX_TOKENS=500
AI_TEMPERATURE=0.7

# Paths
DATA_DIR=./data
EXPORT_DIR=./exports

# Application Settings
APP_ENV=development

APP_DEBUG=true
LOG_LEVEL=INFO

# Database Settings
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres

DB_NAME=customerai
DB_DRIVER=postgresql

# API Settings
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
CORS_ORIGINS=http://localhost:3000,http://localhost:8501

# Authentication & Security
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=1440
PASSWORD_HASH_ITERATIONS=100000


# Monitoring & Logging
ENABLE_METRICS=true
PROMETHEUS_MULTIPROC_DIR=/tmp
ENABLE_TRACING=false
LOG_FORMAT=json

# Model Settings
MODEL_PATH=models/
MODEL_CACHE_TTL=3600
SENTIMENT_MODEL=distilbert-base-uncased-finetuned-sst-2-english
ENABLE_MODEL_CACHING=true

# Cloud Provider Configuration
# Select cloud provider: aws, azure, gcp, or none
CLOUD_PROVIDER=none

# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-access-key-id

AWS_S3_BUCKET=customerai-data
AWS_DYNAMODB_TABLE=customerai-data
AWS_LAMBDA_FUNCTION=customerai-function
AWS_COGNITO_USER_POOL=your-user-pool-id
AWS_COGNITO_CLIENT_ID=your-client-id
AWS_KMS_KEY_ID=your-kms-key-id
AWS_SAGEMAKER_ENDPOINT=your-sagemaker-endpoint
AWS_SAGEMAKER_ROLE=arn:aws:iam::123456789012:role/SageMakerExecutionRole
AWS_CLOUDWATCH_LOG_GROUP=/customerai/logs

# Azure Configuration
AZURE_TENANT_ID=your-tenant-id
AZURE_CLIENT_ID=your-client-id
AZURE_CLIENT_SECRET=your-client-secret
AZURE_SUBSCRIPTION_ID=your-subscription-id
AZURE_RESOURCE_GROUP=customerai-resources
AZURE_STORAGE_ACCOUNT=customeraidata
AZURE_STORAGE_ACCOUNT_KEY=your-storage-account-key
AZURE_STORAGE_CONNECTION_STRING=your-connection-string
AZURE_STORAGE_CONTAINER=data
AZURE_COSMOS_DB_ACCOUNT=your-cosmos-db-account
AZURE_COSMOS_DB_DATABASE=customerai
AZURE_FUNCTION_APP_NAME=customerai-functions
AZURE_KEY_VAULT_NAME=customerai-vault
AZURE_ML_WORKSPACE=customerai-ml
AZURE_APP_INSIGHTS_KEY=your-app-insights-key

# Google Cloud Configuration
GCP_PROJECT_ID=your-project-id
GCP_CREDENTIALS_FILE=path/to/credentials.json
GCP_STORAGE_BUCKET=customerai-data
GCP_FIRESTORE_COLLECTION=customerai-data
GCP_CLOUD_FUNCTION_NAME=customerai-function
GCP_ML_MODEL_NAME=customerai-model
GCP_KMS_KEY_RING=customerai-keyring
GCP_KMS_KEY_NAME=customerai-key
GCP_LOGGING_NAME=customerai-logs

# Feature Flags
ENABLE_FAIRNESS_DETECTION=true
ENABLE_PII_ANONYMIZATION=true
ENABLE_HUMAN_REVIEW=true
ENABLE_CLOUD_STORAGE=false
ENABLE_CLOUD_ML=false

# ========================
# AI & ML Configuration
# ========================

# JAX Configuration
JAX_PLATFORM_NAME=cpu
JAX_ENABLE_X64=true
JAX_DEBUG_NANS=false

# MLflow Configuration
MLFLOW_TRACKING_URI=http://localhost:5000
MLFLOW_EXPERIMENT_NAME=CustomerAI
MLFLOW_S3_ENDPOINT_URL=http://minio:9000
MLFLOW_TRACKING_USERNAME=mlflow
MLFLOW_TRACKING_PASSWORD=mlflowpassword

# Ray Configuration
RAY_ADDRESS=auto
RAY_NUM_CPUS=4
RAY_NUM_GPUS=0
RAY_OBJECT_STORE_MEMORY=1000000000
RAY_DASHBOARD=true
RAY_DASHBOARD_PORT=8265

# Hugging Face Hub
HF_TOKEN=your_huggingface_token_here
HF_MODEL_CACHE=/app/models/hf_cache

# ========================
# Kubernetes Configuration
# ========================
K8S_NAMESPACE=customerai
K8S_CONTEXT=default
K8S_CONFIG_PATH=~/.kube/config
K8S_IN_CLUSTER=false
K8S_SERVICE_ACCOUNT=customerai-sa

# ========================
# Observability Configuration
# ========================

# OpenTelemetry
OTEL_SERVICE_NAME=customerai
OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
OTEL_RESOURCE_ATTRIBUTES=service.version=1.1.0,deployment.environment=development
OTEL_METRICS_EXPORTER=prometheus
OTEL_LOGS_EXPORTER=otlp

# Prometheus
PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus-multiproc
PROMETHEUS_SCRAPE_INTERVAL=15s
PROMETHEUS_RETENTION_TIME=15d

# Grafana
GRAFANA_URL=http://grafana:3000
GRAFANA_USERNAME=admin
GRAFANA_PASSWORD=admin
GRAFANA_ADMIN_PASSWORD=admin

# Jaeger
JAEGER_HOST=jaeger
JAEGER_PORT=4317
JAEGER_UI_PORT=16686

# ========================
# LLM Provider Configuration
# ========================

# OpenAI API Configuration
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_ORGANIZATION=your_openai_org_id_here

# Anthropic API Configuration
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Google AI API Configuration
GOOGLE_API_KEY=your_google_ai_api_key_here

# Azure OpenAI Configuration (if using Azure deployment)
AZURE_OPENAI_API_KEY=your_azure_openai_key_here
AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com
AZURE_OPENAI_API_VERSION=2023-12-01-preview

# LLM Manager Configuration
LLM_CONFIG_PATH=config/llm_config.json

# LLM Security and Compliance
LLM_ALLOW_USER_DATA=false
LLM_LOG_PROMPTS=false
LLM_LOG_COMPLETIONS=false
LLM_MAX_TOKENS=4000
LLM_REQUEST_TIMEOUT=60
LLM_ENABLE_CONTENT_FILTERING=true

# CustomerAI Insights Platform Environment Variables
# Make a copy of this file named .env and fill in your values

# =============================================================================
# API Configuration
# =============================================================================
API_HOST=0.0.0.0
API_PORT=8000
API_DEBUG=false
API_SECRET_KEY=your-secret-key-here
API_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# =============================================================================
# Database Configuration
# =============================================================================
DATABASE_URI=postgresql://user:password@localhost:5432/customerai # pragma: allowlist secret # pragma: allowlist secret
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=10
DATABASE_POOL_TIMEOUT=30

# Vector database
VECTOR_DB_TYPE=postgres  # Options: postgres, faiss, redis, pinecone
PGVECTOR_ENABLED=true

# Optional Redis cache
REDIS_URI=redis://localhost:6379/0
REDIS_PASSWORD=your-redis-password
REDIS_SSL=false

# =============================================================================
# LLM Provider Configuration
# =============================================================================
# OpenAI
OPENAI_API_KEY=your-openai-api-key
OPENAI_ORG_ID=your-openai-org-id

# Anthropic
ANTHROPIC_API_KEY=your-anthropic-api-key

# Google
GOOGLE_API_KEY=your-google-api-key
GOOGLE_PROJECT_ID=your-google-project-id

# Azure OpenAI
AZURE_OPENAI_API_KEY=your-azure-openai-api-key
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com
AZURE_OPENAI_API_VERSION=2023-05-15

# =============================================================================
# Human Review System
# =============================================================================
# Review system database


# For local testing, add any required demo/test secrets to your untracked local environment file. Do not commit secrets or secret-like patterns.
MAX_PENDING_REVIEWS=1000

# Slack integration for notifications
SLACK_API_TOKEN=xoxb-your-slack-token
SLACK_CHANNEL_ID=C1234567890
SLACK_ESCALATION_CHANNEL=C0987654321

# Email notifications
SMTP_SERVER=smtp.example.com
SMTP_PORT=587
SMTP_USERNAME=notifications@example.com
SMTP_PASSWORD=your-smtp-password
SMTP_FROM_EMAIL=notifications@example.com
EMAIL_NOTIFICATION_TO=ai-team@example.com,compliance@example.com

# =============================================================================
# AI Safety & Governance
# =============================================================================
# Model cards
MODEL_CARDS_DIR=data/model_cards

# Guardrails
GUARDRAILS_ENABLED=true
GUARDRAILS_CONFIG_PATH=config/guardrails_config.json
GUARDRAILS_LOG_LEVEL=info

# Human feedback collection
HUMAN_FEEDBACK_DIR=data/human_feedback
RLHF_ENABLED=true

# =============================================================================
# Security & Authentication
# =============================================================================
JWT_SECRET=your-jwt-secret-key
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Authentication providers (optional)
AUTH0_DOMAIN=your-domain.auth0.com
AUTH0_API_AUDIENCE=your-audience
AUTH0_ALGORITHMS=RS256

# =============================================================================
# Observability
# =============================================================================
LOG_LEVEL=info  # debug, info, warning, error, critical
ENABLE_REQUEST_LOGGING=true
ENABLE_PERFORMANCE_LOGGING=true

# OpenTelemetry
OTEL_ENABLED=false
OTEL_SERVICE_NAME=customerai
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

# Prometheus metrics
ENABLE_METRICS=true
METRICS_PORT=9090

# =============================================================================
# Cloud Provider Configuration
# =============================================================================
# AWS
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-west-2
AWS_S3_BUCKET=your-bucket-name

# Azure
AZURE_STORAGE_CONNECTION_STRING=your-connection-string
AZURE_STORAGE_CONTAINER=your-container

# GCP
GOOGLE_APPLICATION_CREDENTIALS=path/to/credentials.json
GCP_PROJECT_ID=your-gcp-project
GCP_STORAGE_BUCKET=your-bucket-name

# =============================================================================
# Application Configuration
# =============================================================================
# File storage path
DATA_DIR=data
CONFIG_DIR=config
TEMP_DIR=/tmp/customerai

# Processing limits
MAX_REQUEST_SIZE_MB=10
MAX_PROCESSING_TIME_SEC=300
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD_SEC=60

# Feature flags
ENABLE_BATCH_PROCESSING=true
ENABLE_STREAMING_RESPONSES=true
ENABLE_MULTIMODAL=true
ENABLE_FEEDBACK_COLLECTION=true

# =============================================================================
# Development & Testing
# =============================================================================
# Development mode
DEV_MODE=false
TESTING=false
MOCK_LLM_RESPONSES=false

# Testing
TEST_DATABASE_URI=sqlite:///test.db
